*********************************************************
NEW RELEASE (x.y) PROCEDURE
*Code*
- Refresh workspace
- Set right version (no more rc), debug to '' and jwsdeploy to 'default'  in build-dist script
- Set "default" to JWS_DIR in make_jajuk script
- Check new incoming updates (i18n)
- String externalization
- Search for debug System.out
- Make required translations (fr)
- Generate packages
- Test it a minima under several OS
- Commit all changes in jajuk project
- Tag as version
- Create a maintenance branch for new major releases (x.y level)

*SF*
- Close bugs, known issues and RFE at SF
- Make a new in SF

*Web site*
- Update and set date to release in changes.xml
- Create a qualification-<release>.html file
- Add a release in main_qualification.html file
- Modify index.xml and change.xml maven files
- Change download.html file for file names
- Upgrade project.xml maven file
- Backup SF data (php file)
- Generate website PDF (make_jajuk pdf) 
- Generate and upload maven site (make_jajuk)
- Commit all changes in jajuk_website project
- Clean snapshots directory

*Others*
- Save dist file in the releases save dir
- Send a message in the developer forum

*********************************************************
FIX RELEASE (x.y.z) PROCEDURE
*Code*
o- Refresh workspace
o- Set right version (no more rc), debug to '' and jwsdeploy to 'default'  in build-dist script
o- Set "default" to JWS_DIR in make_jajuk script
o- Check new incoming updates (i18n)
o- String externalization
o- Search for debug System.out
o- Make required translations (fr)
o- Generate packages
o- Test it a minima under several OS
o- Commit all changes in jajuk project
o- Tag as version

*SF*
o- Close bugs, known issues and RFE at SF

*Web site*
o- Update and set date to release in changes.xml
o- Change download.html file for file names
o- Backup SF data (php file)
o- Generate and upload maven site (make_jajuk)
- Commit all changes in jajuk_website project

*Others*
o- Save dist file in the releases save dir
- Send a message in the developer forum

*********************************************************
RELEASE CANDIDATE (x.y.zRCn) PROCEDURE
*Code*
- Refresh workspace
- Set right version (no - ex: 1.0.4rc4), debug to '-test' and jwsdeploy to 'test'  in build-dist script
- Set 'test' to JWS_DIR in make_jajuk script
- Check new incoming updates (i18n)
- Generate packages
- Commit all changes in jajuk project

*Others*
- Send a message in the developer forum with Java We Start link to http://jajuk.sourceforge.net/test/jajuk.jnlp

*********************************************************
ANNOUNCEMENT PROCEDURE
- Make a release at freshmeat

*********************************************************
NEW LANGUAGE PROCEDURE
- Add register in Main.java
- Add a notice in changelog
- Add a language in translation_howto/ already translated
- Add a ligne in jajuk.properties
- Check the language has a auto-description
- Add a flag in all README files 
- Add a langpack in jajuk.izpack
- Add flags in the index.xml
- Create a link on README file in /data/projects/jajuk/maven_rep/target/docs
- Change Natural languages in SF and Freshmeat
- Update translation howto

*********************************************************
API ADDITION/UPGRADE/REMOVAL PROCEDURE
- Add/Change/Remove file in lib directory
- Change MANIFEST (check new versions)
- Change project.xml maven file for dependencies

*********************************************************
NEW CONTRIBUTOR PROCEDURE
- Add in AboutView.java
- Add in project.xml file 
