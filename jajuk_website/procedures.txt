*********************************************************
NEW RELEASE (x.y) PROCEDURE
*Code*
o- Refresh workspace
o- Remove useless jars in lib directory
o- In build-dist.xml, set right version (no more rc), previous version, 
	test to '-notest' and jwsdeploy to 'default'  
o- Set right version in README files
o- Check new incoming updates (i18n)
o- (opt)String externalization
o- Search for debug System.out
o- Search for wrong Messages class
o- Set right version in the FROM tag in langpacks
o- Commit all changes in jajuk project
o- Generate packages
o- Test it a minima under several OS
o- Tag as version
o- Create a maintenance branch for new major releases (x.y level)

*SF*
o- Close bugs, known issues and RFE at SF
o- Release on SF
o- Make a news at SF

*Web site*
o- Update and set date to release in changes.xml
o- Create a qualification-<release>.html file
o- Modify index.xml maven files
o- Change download.html file for file names
o- Upgrade project.xml maven file (version and users)
o- Backup SF data (php file)
o- Generate maven site (make_jajuk site)
o- Refresh jajuk_website project and commit all changes in jajuk_website project
- Upload new web site (make_jajuk send)
o- Update JNLP distribution using the war and the tomcat admin console
o- Clean snapshots directory
- Check website (links, pages...)
- Check JNLP distribution
- Update the pad file version: date, version, Primary_Download_URL et size

*Others*
o- Save dist file in the releases save dir
- Send a message in the developer forum

*********************************************************
FIX RELEASE (x.y.z) PROCEDURE
*Code*
o- Refresh workspace
o- Set right version (no more rc), test to '-notest', previous_release and change jajuktimestamp in build-dist script
o- Check new incoming updates (i18n)
o- Search for debug System.out
o- Search for wrong Messages class
o- Generate packages
o- Test it a minima under several OS
o- Commit all changes in jajuk project
- Tag as version

*SF*
o- Close bugs, known issues and RFE at SF
- Release on SF

*Web site*
o- Update and set date to release in changes.xml
- Change download.html file for file names. CAUTION: KEEP X.Y link for NOTES.
- Commit all changes in jajuk_website project- Commit all changes in jajuk_website project
- Generate maven site (make_jajuk site)
- Upload maven site (make_jajuk send)
- Update JNLP distribution using the war and the tomcat admin console
- Check website (links, pages...)
- Check JWS distribution
- Update the pad file version: date, version, Primary_Download_URL et size

*Others*
o- Save dist file in the releases save dir
o- Send a message in the developer forum

*********************************************************
RELEASE CANDIDATE (x.y.zRCn) PROCEDURE
*Code*
- Refresh workspace
- Set right version (no - ex: 1.0.4rc4), debug to '-test', previous_release and change jajuktimestamp in build-dist script
- Set 'test' to JWS_DIR in make_jajuk script
- Check new incoming updates (i18n)
- Generate packages
- Commit all changes in jajuk project

*Others*
- Send a message in the developer forum with Java We Start link to http://jajuk.sourceforge.net/test/jajuk.jnlp

*********************************************************
ANNOUNCEMENT PROCEDURE
- Make a release at freshmeat

*********************************************************
NEW LANGUAGE PROCEDURE
- Add register in Main.java
- Add a notice in changelog
- Add a language in translation_howto/ already translated
- Add a ligne in jajuk.properties
- Check the language has a auto-description
- Add a flag in all README files 
- Add a langpack in jajuk.izpack
- Add flags in the index.xml
- Create a link on README file in /data/projects/jajuk/maven_rep/target/docs
- Change Natural languages in SF and Freshmeat
- If new contributor, see New contributor procedure

*********************************************************
API ADDITION PROCEDURE
- Add jar in MANIFEST
- Change project.xml maven file for dependencies
- Install the jar in the maven repository: mvn install:install-file -DgroupId=CommonsCollection -DartifactId=commons-collections -Dversion=3.2 -Dpackaging=jar -Dfile=commons-collections-3.2.jar
- Add jnlp file 
- Update jajuk.jnlp file
- Sign all new jars (jarsigner myjar.jar jajukteam)
- Update website dependencies in jajuk_dependencies.html

*********************************************************
API CHANGE PROCEDURE
- Change dist-files/packaging/MANIFEST (check new versions)
- Change JAJUK_WEBSITE project/project.xml maven file for dependencies
- Install the jar in the maven repository: mvn install:install-file -DgroupId=CommonsCollection -DartifactId=commons-collections -Dversion=3.2 -Dpackaging=jar -Dfile=commons-collections-3.2.jar
- Change packaging/jnlp/jnlp file
- Sign all jar (jarsigner myjar.jar jajukteam)

*********************************************************
API REMOVE PROCEDURE
- Remove file in lib directory
- Change MANIFEST (check new versions)
- Change project.xml maven file for dependencies
- Remove jnlp file and update jajuk.jnlp file

*********************************************************
NEW CONTRIBUTOR PROCEDURE
- Add in AboutView.java
- Add in project.xml file 
