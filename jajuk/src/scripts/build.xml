<?xml version='1.0' encoding='UTF-8'?>
<!--Ant script for user (target: package_jar) and packagers (other targets)-->
<!--void 3 -->

<project default='package_jar' name='jajuk' basedir='../..'>
	<!--VARIABLES-->

	<!--Distribution release, Do not use the following chars in the version value: "-" -->
	<property name='version' value='1.5dev' />

	<!--Previous release used for JNLP incremental upgrade-->
	<property name='previous_version' value='null' />

	<!--Test flag: values: test or notest -->
	<property name='test' value='test' />
		
	<!-- ======================= -->
	<!-- | Configuration paths | -->
	<!-- ======================= -->

	<!-- Conf for bflorat server
	<property name='conf_izpackdir' value='/prog/IzPack' />
	<property name='conf_jsmoothgendir' value='/prog/jsmooth-0.9.7' />
	<property name='conf_javahelpdir' value='/prog/api/jh/javahelp' />
	<property name='conf_jnlp-dist' value='/data/java/jnlp-dist' />
	<property name='conf_homeuser' value='/home/bflorat' />
	<property name='conf_uploaddir' value='${rootdir}/upload' />
	<property name='conf_jarbundler' value='/prog/jarbundler-1.9' />
	-->

	<!-- Conf for Jajuk server -->
	<property name='conf_izpackdir' value='/svn-jajuk/tools/IzPack' />
	<property name='conf_jsmoothgendir' value='/svn-jajuk/tools/jsmooth-0.9.9-7' />
	<property name='conf_javahelpdir' value='/svn-jajuk/tools/javahelp/jh2.0/javahelp' />
	<property name='conf_jnlp-dist' value='/svn-jajuk/jnlp-dist' />
	<property name='conf_homeuser' value='/home/jbuild' />
	<property name='conf_uploaddir' value='/tmp/jajuk-dist/packages/' />
	<property name='conf_jarbundler' value='/svn-jajuk/tools/jarbundler-1.9' />

	<!-- ============================== -->
	<!-- | End of configuration paths | -->
	<!-- ============================== -->

	<!--CONST-->
	<property name='rootdir' value='/tmp/jajuk-dist' />
	<property name='distdir' value='${rootdir}/jajuk' />
	<property name='rpmbuilddir' value='${rootdir}/RPMBUILD' />
	<property name='rpmdistdir' value='${rpmbuilddir}/jajuk' />
	<property name='windowsdir' value='${rootdir}/windows' />
	<property name='izpackdir' value='${rootdir}/java' />
	<property name='sourcesdir' value='${rootdir}/sources' />
	<property name='libdir' value='lib' />
	<property name='distfiles' value='dist-files' />
	<property name='nativedir' value='native' />
	<property name='javadir' value='src/main/java' />
	<property name='classdir' value='classes' />
	<property name='javadocdir' value='dist-files/doc/javadoc' />
	<property name='jarname' value='jajuk.jar' />
	<property name='helpsetjarname' value='jajuk-help' />
	<property name='distjarname' value='jajuk-java-installer-' />
	<property name='sourcesdist' value='${sourcesdir}/jajuk-sources-${version}.zip' />
	<property name='helpdir' value='${rootdir}/help' />
	<!-- This is the intermediate directory used to build war file, we use a persisitent 
 	directory to use jar files in next war (each war contains current and previous jars for incremental upgrade) -->
	<property name='jnlpdir' value='${conf_jnlp-dist}/${version}' />
	<property name='previousjnlpdir' value='${conf_jnlp-dist}/${previous_version}' />
	<property name='srcdir' value='${basedir}/src' />


	<target name='startup'>
		<echo message='Building Jajuk release: ${version}' />
		<echo message='Basedir: ${basedir}' />
		<!--Prepare timestamp-->
		<tstamp>
			<format property="JAJUK_TIMESTAMP" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>
	</target>


	<target name='clean' description='o Clean up previous build files'>
		<delete dir='${rootdir}' />
		<delete dir='${jnlpdir}' />
	</target>


	<target name='mkdist_jar'>
		<echo message='Prepare files to build jar package' />
		<mkdir dir='${rootdir}' />
		<mkdir dir='${distdir}' />
		<copy todir='${distdir}/lib'>
			<fileset dir='${libdir}' />
			<fileset file='${basedir}/src/legals/*.*' />
		</copy>
		<mkdir dir='${distdir}/bin' />
		<mkdir dir='${distdir}/${classdir}' />
		<copy todir='${distdir}/src'>
			<fileset dir='${javadir}' />
		</copy>
		<!--copy README and legals file in / for package distribution-->
		<copy todir='${distdir}'>
			<fileset file='${basedir}/src/legals/LICENSE-GPL.txt' />
			<fileset file='${basedir}/src/legals/DERIVATED.txt' />
			<fileset file='${basedir}/src/doc/README.html' />
		</copy>
		<!--copy both README and LICENCE files as must also be in src/ for source distribution-->
		<copy todir='${distdir}/src'>
			<fileset file='${basedir}/src/legals/LICENSE-GPL.txt' />
			<fileset file='${basedir}/src/legals/DERIVATED.txt' />
			<fileset file='${basedir}/src/doc/README.html' />
		</copy>

		<!--copy native dll to bin directory-->
		<copy todir='${distdir}/bin'>
			<fileset file='${basedir}/*.dll' />
		</copy>
		<copy todir='${distdir}/src'>
			<fileset file='${srcdir}/packaging/MANIFEST.MF' />
		</copy>
		<copy todir='${distdir}'>
			<fileset file='${srcdir}/scripts/build.xml' />
		</copy>
		<mkdir dir='${distdir}/dist-files' />
		<copy todir='${distdir}/dist-files/icons'>
			<fileset file='${srcdir}/main/resources/icons/**' />
		</copy>
		<copy todir='${distdir}/dist-files/images'>
			<fileset file='${srcdir}/main/resources/images/**' />
		</copy>
		<copy todir='${distdir}/dist-files/perspectives'>
			<fileset file='${srcdir}/main/resources/perspectives/**' />
		</copy>
		<copy todir='${distdir}'>
			<fileset file='${srcdir}/main/resources/icons/64x64/jajuk-icon-shortcut_64x64.png' />
			<fileset file='${srcdir}/main/resources/icons/16x16/jajuk-uninstall.png' />
		</copy>
		<copy todir='${distdir}'>
			<fileset file='${srcdir}/scripts/jajuk' />
			<fileset file='${srcdir}/scripts/jajuk.bat' />
		</copy>
		<chmod file='${distdir}/jajuk' perm='ugo+rx' />

		<!-- Set build date -->
		<tstamp>
			<format property='build.time' pattern='yyyy/MM/dd HH:mm' />
		</tstamp>
		<echo message='Build time: ${build.time}' />
		<replace dir='${distdir}/src/org/jajuk/util' value='${build.time}'>
			<include name='ITechnicalStrings.java' />
			<replacetoken>DATE_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set release in code-->
		<replace dir='${distdir}/src/org/jajuk/util' value='${version}'>
			<include name='ITechnicalStrings.java' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set release in user build.xml file-->
		<replace dir='${distdir}' value='${version}'>
			<include name='build.xml' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set debug value in scripts-->
		<replace dir='${distdir}' value='-${test}'>
			<include name='jajuk' />
			<include name='jajuk.bat' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>


	<target name='mkdist_helpjar' depends='startup,clean'>
		<echo message='Prepare files to build helpjar files' />
		<mkdir dir='${helpdir}' />
		<mkdir dir='${distdir}/bin/' />
	</target>


	<target name='package_jar' description='o Create Jajuk jar file' depends='startup,clean,mkdist_jar,compile'>
		<echo message='Create Jajuk jar file' />
		<jar jarfile='${distdir}/bin/${jarname}' excludes='**/package.html' manifest='${srcdir}/packaging/MANIFEST.MF' compress='true'>
			<fileset dir='${distdir}/${classdir}' />
		</jar>
		<delete dir='${distdir}/${classdir}' />
		<echo message='jajuk.jar had been successfully built in: ${distdir}/bin/${jarname}' />
	</target>


	<target name='package_helpjar' description='o Create Jajuk help jar files' depends='startup,clean,mkdist_helpjar'>
		<echo message='Create Jajuk help jar files' />
		<!--Copy-->
		<copy todir='${helpdir}'>
			<fileset dir='${srcdir}/doc/jajuk-hs' />
		</copy>
		<copy todir='${helpdir}/default'>
			<fileset dir='${srcdir}/doc'>
				<include name='images/**' />
				<include name='icons/**' />
			</fileset>
		</copy>
		<!-- indexer -->
		<!--English-->
		<exec executable='${conf_javahelpdir}/bin/jhindexer' dir='${helpdir}/default'>
			<arg line='-locale en_US html' />
		</exec>
		<!-- jar creation -->
		<jar jarfile='${distdir}/bin/${helpsetjarname}.jar' basedir='${helpdir}/default' />
		<signjar jar="${distdir}/bin/${helpsetjarname}.jar" alias="jajukteam" storepass="passpass" />
		<!-- Copy jajuk jar in the workspace -->
		<copy todir='${basedir}'>
			<fileset file='${distdir}/bin/${helpsetjarname}*.jar' />
		</copy>

		<echo message='${helpsetjarname}.jar had been successfully built in: ${distdir}/bin/${helpsetjarname}.jar' />
	</target>


	<target name='package_all' description='o Create all packages' depends='package_jar_sign,package_helpjar_sign,package_izpack,package_rpm,package_source,package_sfx,package_jnlp,package_macosx'>
		<echo message='Successfully built packages:' />
		<echo message=' Jajuk Jar file in:     ${distdir}/bin/${jarname}' />
		<echo message=' Help Jar file in:      ${distdir}/bin/${helpsetjarname}.jar' />
		<echo message=' RPM package in:        ${rpmbuilddir}/RPMS/noarch/jajuk-${version}.noarch.rpm' />
		<echo message=' Windows executable in: ${windowsdir}/jajuk-${version}-win32.exe' />
		<echo message=' Java installer in:     ${izpackdir}/jajuk-java-installer-${version}.jar' />
		<echo message=' MAC OS X in:           ${distdir}/jajuk-macosx-${version}.zip' />
		<echo message=' Source archive in:     ${sourcesdist}' />
		<echo message=' JNLP war file in:      ${rootdir}/jajuk-${test}.war' />
	</target>


	<target name='package_jar_sign' description='o Create Jajuk jar file and sign it' depends='package_jar'>
		<!--Sign jajuk jars (others are signed manually once) -->
		<!--for security reason (this file is commited with keystore password), 
    keystore password is changed after this script execution, password is temporary -->
		<signjar jar="${distdir}/bin/${jarname}" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/animation-1.2.0.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/basicplayer-3.0.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/cobra-0.96.5R2.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/commons-codec-1.3.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/commons-collections-3.2.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/commons-logging-1.0.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/entagged-audioformats-0.15.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/entagged-freedb-0.04.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/forms-1.1.0.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jcommon-1.0.0.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jdic-20060613.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jfreechart-1.0.1.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jh_reduced-2.0.2.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jintellitype-1.2.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jlayer-1.0.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jmactritonusspi-1.74.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jogg-0.0.7.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jorbis-0.0.13.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/js-0.96.5R2.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/jspeex-0.9.3.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/log4j_reduced-1.2.6.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/mp3spi-1.9.4.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/qdwizard-1.9.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/substance-4.1dev.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/swingx-2007_07_22.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/tablelayout-20070421.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/tritonus_share-release.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/vldocking-2.1.4.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/vorbisspi-1.0.1.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/windows/jdic_stub.jar" alias="jajukteam" storepass="passpass" />
		<signjar jar="${distdir}/lib/linux/jdic_stub.jar" alias="jajukteam" storepass="passpass" />
	</target>


	<target name='package_helpjar_sign' description='o Create Jajuk help jar files and sign it' depends='package_helpjar'>
		<echo message='Sign help jar files' />
		<signjar jar="${distdir}/bin/${helpsetjarname}.jar" alias="jajukteam" storepass="passpass" />
	</target>


	<!--IzPack package creation -->

	<target name='package_izpack' description='o Create Jajuk IzPack package' depends='startup,clean,mkdist_izpack,package_jar,package_helpjar'>
		<taskdef name='izpack' classpath='${conf_izpackdir}/lib/compiler.jar' classname='com.izforge.izpack.ant.IzPackTask' />
		<echo message='Create Jajuk IzPack package' />
		<echo message='Makes the installer using IzPack' />
		<izpack input='${izpackdir}/jajuk.izpack' output='${izpackdir}/${distjarname}${version}.jar' basedir='${srcdir}' izPackDir='${conf_izpackdir}' />
	</target>


	<target name='package_rpm' description='o Create Jajuk RPM package' depends='startup,clean,mkdist_rpm,package_jar,package_helpjar'>
		<echo message='Create Jajuk RPM package' />
		<!-- Copy jajuk helpset jars in the RPM distdir -->
		<copy todir='${rpmdistdir}/usr/lib/jajuk/bin'>
			<fileset file='${distdir}/bin/${helpsetjarname}*.jar' />
		</copy>
		<!-- Copy jajuk.jar in the RPM distdir -->
		<copy todir='${rpmdistdir}/usr/lib/jajuk/bin'>
			<fileset file='${distdir}/bin/${jarname}' />
		</copy>

		<!-- rights-->
		<chmod file='${rpmdistdir}/usr/bin/jajuk' perm='ugo+rx' />
		<chmod file='${rpmdistdir}/usr/share/applications/Jajuk.desktop' perm='ugo+rwx' />

		<!--RPM, see http://forgeftp.novell.com//library/SUSE%20Package%20Conventions/spc_desktop_menu.html-->
		<copy todir='${conf_homeuser}' overwrite='yes'>
			<fileset file='${srcdir}/packaging/RPMS/.rpmmacros' />
		</copy>
		<rpm specFile='jajuk.spec' topDir='${rpmbuilddir}' cleanBuildDir='yes' removeSpec='no' command='-bb' />
	</target>


	<!--jarbundler Mac OS X zip package creation -->
	<target name='package_macosx' description='o Create Jajuk MAC OS X package' depends='startup,clean,mkdist_macosx,package_jar,package_helpjar,jarbundler'>
		<echo message='Create Jajuk MAC OS X package' />
		<!-- Create the distribution directory -->
		<mkdir dir="${distdir}/macosx" />
		<zip zipfile="${distdir}/jajuk-macosx-${version}.zip">
			<zipfileset dir="${distdir}/jarbundler/Jajuk.app/Contents" filemode="755" prefix="Jajuk.app/Contents">
				<include name="MacOS/JavaApplicationStub" />
				<include name="PkgInfo" />
				<include name="Info.plist" />
				<include name="Resources/**" />
			</zipfileset>
			<fileset file="${basedir}/src/doc/README.html" />
			<fileset file="${basedir}/src/legals/LICENSE.txt" />
		</zip>
	</target>

	<target name='package_source' description='o Create Jajuk source package (zip)' depends='startup,clean,mkdist_source'>
		<echo message='Create Jajuk source package' />
		<zip basedir='${sourcesdir}' destfile='${sourcesdist}' />
	</target>


	<!-- Windows EXE creation-->
	<target name='package_sfx' description='o Create Jajuk Windows executable file' depends='startup,clean,mkdist_sfx,package_jar,package_helpjar'>
		<taskdef name="jsmoothgen" classname="net.charabia.jsmoothgen.ant.JSmoothGen" classpath="${conf_jsmoothgendir}/lib/jsmoothgen-ant.jar" />
		<echo message='Create Jajuk Windows executable file' />
		<jsmoothgen project="/tmp/jajuk-dist/windows/jajuk.jsmooth" skeletonroot="${conf_jsmoothgendir}/skeletons" />
	</target>


	<target name='package_jnlp' description='o Create Java Web Start war distribution' depends='startup,clean,package_jar,package_helpjar'>
		<echo message='Create Java Web Start war distribution' />
		<!--Note that all jars (including jajuk-native.jar must be signed with the same certificate), we do this manually -->
		<!-- Unlike standalone distributions, JNLP have to use JDIC platform distributions jars, browser will
	not work with cross-platform distributions-->
		<mkdir dir='${jnlpdir}' />
		<mkdir dir='${jnlpdir}/app' />
		<mkdir dir='${jnlpdir}/app/windows' />
		<mkdir dir='${jnlpdir}/app/linux' />
		<!--Copy current jars -->
		<copy todir='${jnlpdir}/app'>
			<fileset file='${distdir}/lib/*.jar' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${distdir}/bin/*.jar' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${srcdir}/packaging/jnlp/*.jnlp' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${srcdir}/packaging/jnlp/*.gif' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${srcdir}/main/resources/images/included/jajuk-splashscreen.jpg' />
		</copy>
		<!--Copy native jars -->
		<copy todir='${jnlpdir}/app/linux'>
			<fileset file='${srcdir}/packaging/jnlp/linux/*.jar' />
		</copy>
		<copy todir='${jnlpdir}/app/windows'>
			<fileset file='${srcdir}/packaging/jnlp/windows/*.jar' />
		</copy>
		<replace dir='${jnlpdir}/app' value='${test}'>
			<include name='launch.jnlp' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Rename all jars to add JNLP-way release: <name>__V<release>.jar -->
		<move todir="${jnlpdir}">
			<fileset dir="${jnlpdir}">
				<include name="**/*.jar" />
			</fileset>
			<mapper type="glob" from="*.jar" to="*__V${version}.jar" />
		</move>

		<!-- Set release in user jnlp file-->
		<replace dir='${jnlpdir}/app' value='${version}'>
			<include name='*.jnlp' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set test or no test in jnlp file-->
		<replace dir='${jnlpdir}/app' value='${test}'>
			<include name='*.jnlp' />
			<replacetoken>TEST_FLAG_ REPLACED_BY_ANT</replacetoken>
		</replace>

		<!--Copy previous release jars, comment this if you have no previous release
		<copy todir='${jnlpdir}/app'>
			<fileset dir="${previousjnlpdir}/app">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		-->

		<!-- Create the war file -->
		<war destfile='${rootdir}/jajuk-${test}.war' webxml='${srcdir}/packaging/jnlp/web.xml'>
			<fileset dir='${jnlpdir}' />
			<lib file='${srcdir}/packaging/jnlp/jnlp-servlet.jar' />
		</war>
	</target>


	<target name='mkdist_izpack'>
		<echo message='Prepare files to build IzPack package' />
		<mkdir dir='${izpackdir}' />
		<!--Izpack specific -->
		<copy todir='${izpackdir}'>
			<fileset file='${srcdir}/packaging/IzPack/jajuk.izpack' />
			<fileset file='${srcdir}/packaging/IzPack/shortcutSpec.xml' />
			<fileset file='${srcdir}/packaging/IzPack/installDirectory.unix.txt' />
		</copy>
		<!-- Set release in IzPack descriptor file-->
		<replace dir='${izpackdir}' value='${version}'>
			<include name='jajuk.izpack' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<replace dir='${izpackdir}' value='-${test}'>
			<include name='shortcutSpec.xml' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>


	<target name='mkdist_rpm'>
		<echo message='Prepare files to build RPM package' />
		<!--RPM specific-->
		<!-- Create structure-->
		<mkdir dir='${rootdir}' />
		<mkdir dir='${rpmbuilddir}' />
		<mkdir dir='${rpmbuilddir}/tmp' />
		<mkdir dir='${rpmbuilddir}/SRMPS' />
		<mkdir dir='${rpmbuilddir}/RPMS' />
		<mkdir dir='${rpmbuilddir}/SPECS' />
		<mkdir dir='${rpmbuilddir}/BUILD' />
		<mkdir dir='${rpmdistdir}' />
		<mkdir dir='${rpmdistdir}/usr/bin' />
		<mkdir dir='${rpmdistdir}/usr/lib/jajuk/bin' />
		<mkdir dir='${rpmdistdir}/usr/lib/jajuk/lib' />
		<mkdir dir='${rpmdistdir}/usr/lib/jajuk/lib/linux' />
		<mkdir dir='${rpmdistdir}/usr/lib/jajuk/native' />
		<mkdir dir='${rpmdistdir}/usr/share/applications' />
		<mkdir dir='${rpmdistdir}/usr/share/doc/packages/jajuk' />
		<mkdir dir='${rpmdistdir}/usr/share/pixmaps' />

		<!-- Copy files -->
		<!--RPM-->
		<copy todir='${rpmbuilddir}/SPECS'>
			<fileset file='${srcdir}/packaging/RPMS/jajuk.spec' />
		</copy>
		<copy todir='${rpmdistdir}/usr/bin'>
			<fileset file='${srcdir}/scripts/jajuk' />
		</copy>
		<!--DO SOMETHING BETTER HERE -->
		<copy todir='${rpmdistdir}/usr/lib/jajuk/lib'>
			<fileset file="${basedir}/lib/*.jar" />
		</copy>
		<copy todir='${rpmdistdir}/usr/lib/jajuk/lib'>
			<fileset file='${basedir}/src/legals/*.*' />
		</copy>
		<copy todir='${rpmdistdir}/usr/lib/jajuk/lib/linux'>
			<fileset file="${basedir}/lib/linux/*" />
		</copy>
		<copy todir='${rpmdistdir}/usr/lib/jajuk/lib/linux/x86'>
			<fileset file="${basedir}/lib/linux/x86/*" />
		</copy>
		<!--/DO SOMETHING BETTER HERE -->
		<copy todir='${rpmdistdir}/usr/share/applications'>
			<fileset file='${srcdir}/packaging/RPMS/Jajuk.desktop' />
		</copy>
		<copy todir='${rpmdistdir}/usr/share/doc/packages/jajuk'>
			<fileset file='${basedir}/src/doc/README.html' />
			<fileset file='${basedir}/src/legals/*.*' />
		</copy>
		<copy todir='${rpmdistdir}/usr/share/pixmaps'>
			<fileset file='${srcdir}/main/resources/icons/64x64/jajuk-icon-shortcut_64x64.png' />
		</copy>
		<!-- Set release in RPM descriptor file-->
		<replace dir='${rpmbuilddir}/SPECS' value='${version}'>
			<include name='jajuk.spec' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<replace dir='${rpmdistdir}/usr/bin' value='-${test}'>
			<include name='jajuk' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>


	<target name='mkdist_macosx'>
		<echo message='Prepare files to build MAC OS X package' />
	</target>


	<target name='mkdist_sfx'>
		<echo message='Prepare files to build Windows executable' />
		<mkdir dir='${windowsdir}' />
		<!--Windows specific -->
		<copy todir='${windowsdir}'>
			<fileset file='${srcdir}/packaging/native_launcher/*' />
		</copy>
		<!-- Set release in native launcher descriptor file-->
		<replace dir='${windowsdir}' value='${version}'>
			<include name='jajuk.jsmooth' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>


	<target name='mkdist_source'>
		<echo message='Prepare files to build source package' />
		<mkdir dir='${sourcesdir}/jajuk-src-${version}' />
		<copy todir='${sourcesdir}/jajuk-src-${version}'>
			<fileset file='${basedir}/**' />
		</copy>

	</target>


	<target name='compile'>
		<echo message='Compile the code' />
		<javac destdir='${distdir}/${classdir}' source='1.5' target='1.5' deprecation='true' debug='true' optimize='true' excludes='**/package.html'>
			<src>
				<pathelement path='${distdir}/src'>
				</pathelement>
			</src>
			<classpath>
				<fileset dir='${distdir}/lib'>
					<include name='*.jar'>
					</include>
				</fileset>
			</classpath>
		</javac>
		<mkdir dir='${distdir}/${classdir}/icons' />
		<mkdir dir='${distdir}/${classdir}/images' />
		<mkdir dir='${distdir}/${classdir}/perspectives' />
		<mkdir dir='${distdir}/${classdir}/docs' />
		<!-- Copy files to be embeded into the jar -->
		<copy todir='${distdir}/${classdir}/icons'>
			<fileset dir='${srcdir}/main/resources/icons' />
		</copy>
		<copy todir='${distdir}/${classdir}/images/included'>
			<fileset file='${srcdir}/main/resources/images/included/*' />
		</copy>
		<copy todir='${distdir}/${classdir}/docs'>
			<fileset file='${srcdir}/doc/about.html' />
		</copy>
		<copy todir='${distdir}/${classdir}/org/jajuk/i18n'>
			<fileset file='${javadir}/org/jajuk/i18n/*.properties' />
		</copy>
		<copy todir='${distdir}/${classdir}/org/jajuk/util/log'>
			<fileset file='${javadir}/org/jajuk/util/log/jajuk-log4j-conf.xml' />
		</copy>
		<copy todir='${distdir}/${classdir}/perspectives'>
			<fileset file='${srcdir}/main/resources//perspectives/*.xml' />
		</copy>
	</target>


	<target name='javadoc'>
		<delete dir='${javadocdir}' />
		<mkdir dir='${javadocdir}' />
		<property name='copyright' value='Copyright &amp;copy;  Jajuk team. All Rights Reserved.' />
		<javadoc destdir='${javadocdir}' access='private' use='true' notree='false' nonavbar='false' noindex='false' splitindex='true' author='true' version='true' nodeprecatedlist='false' nodeprecated='false' packagenames='org.jajuk.base,org.jajuk.ui.views,org.jajuk,org.jajuk.i18n,org.jajuk.ui.perspectives,org.jajuk.util.log,org.jajuk.ui,org.jajuk.util,org.jajuk.util.error,org.jajuk.players' sourcepath='src' source='1.5' Windowtitle='Jajuk ${version} API'>
			<classpath>
				<fileset dir='${libdir}'>
					<include name='*.jar'>
					</include>
				</fileset>
				<pathelement location='target/${final.name}.jar' />
			</classpath>
		</javadoc>
	</target>


	<!--jarbundler Mac OS X package creation -->
	<target name='jarbundler' depends='package_jar,package_helpjar'>
		<taskdef name='jarbundler' classpath='${conf_jarbundler}/jarbundler-1.9.jar' 
			classname="net.sourceforge.jarbundler.JarBundler" />
		<echo message='jarbundler' />
		<mkdir dir='${distdir}/jarbundler/' />
		<jarbundler dir="${distdir}/jarbundler/" name="Jajuk" mainclass="org.jajuk.Main" 
			icon="${distdir}/dist-files/images/jajuk-icon_source.icns" jvmversion="1.5+" 
			version="${version}" infostring="Jajuk" stubfile="${basedir}/src/packaging/jarbundler/JavaApplicationStub" 
			build="${version}" vmoptions="-client -Xms20M -Xmx512M -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -jar jajuk.jar TEST_FLAG_REPLACED_BY_ANT">
			<jarfileset dir="${distdir}/lib">
				<include name="**/*.jar" />
			</jarfileset>
			<jarfileset dir="${distdir}/bin">
				<include name="**/*.jar" />
			</jarfileset>
		</jarbundler>
	</target>


	<!-- Signes and upload packages-->
	<target name='deploy_new_release' description='o Put all generated packages and checksums into Jajuk webserver repository directory' depends='package_all'>
		<mkdir dir='${conf_uploaddir}' />
		<copy todir='${conf_uploaddir}'>
			<fileset file='${sourcesdist}' />
			<fileset file='${rpmbuilddir}/RPMS/noarch/*' />
			<fileset file='${windowsdir}/jajuk-${version}-win32.exe' />
			<fileset file='${izpackdir}/jajuk-java-installer-${version}.jar' />
			<fileset file='${distdir}/jajuk-macosx-${version}.zip' />
		</copy>

		<!-- Generate MD5 http://ant.apache.org/manual/CoreTasks/checksum.html -->
		<checksum file="${conf_uploaddir}/jajuk-sources-${version}.zip" forceOverwrite="yes" fileext=".md5" />
		<checksum file="${conf_uploaddir}/jajuk-${version}.noarch.rpm" forceOverwrite="yes" fileext=".md5" />
		<checksum file="${conf_uploaddir}/jajuk-${version}-win32.exe" forceOverwrite="yes" fileext=".md5" />
		<checksum file="${conf_uploaddir}/jajuk-java-installer-${version}.jar" forceOverwrite="yes" fileext=".md5" />
		<checksum file="${conf_uploaddir}/jajuk-macosx-${version}.zip" forceOverwrite="yes" fileext=".md5" />

		<!-- Generate SHA http://ant.apache.org/manual/CoreTasks/checksum.html -->
		<checksum file="${conf_uploaddir}/jajuk-sources-${version}.zip" forceOverwrite="yes" algorithm="SHA" fileext=".asc" />
		<checksum file="${conf_uploaddir}/jajuk-${version}.noarch.rpm" forceOverwrite="yes" algorithm="SHA" fileext=".asc" />
		<checksum file="${conf_uploaddir}/jajuk-${version}-win32.exe" forceOverwrite="yes" algorithm="SHA" fileext=".asc" />
		<checksum file="${conf_uploaddir}/jajuk-java-installer-${version}.jar" forceOverwrite="yes" algorithm="SHA" fileext=".asc" />
		<checksum file="${conf_uploaddir}/jajuk-macosx-${version}.zip" forceOverwrite="yes" algorithm="SHA" fileext=".asc" />
	</target>


</project>
