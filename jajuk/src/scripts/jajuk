#!/bin/sh
## This is Jajuk main starting script 

JAJUK_VERSION="VERSION_REPLACED_BY_ANT"

###########################
### CONFIGURATION START ###

#to use your default java on your system use JAVA_BIN="java", or you can give the full path of java.
JAVA_BIN="java"

#JVM arguments used by Jajuk. It's important  to notice that some of this tuning is useful only when using Java player (when mplayer is not available)
# * -client : Use the client JVM, optimized for single user usage [Don't change this setting]
# * -Xms : Initial Heap (total JVM reserved memory) size. We set it to a pretty large value because it requires resources to expand heap size and it causes a blanck when using java player. [it can be reduced to 25M by some users if required]
# * -Xmx: Maximal Heap size. We set a large size because Out Of Memory errors make the application crash. In some rare cases, very large collection (>200Gb) users could increase this setting (see Performance section in the manual). We don't set it to a lower value to avoid Out of Memory issues when performing memory consuming tasks (like generating thumbs). We don't set an higher value because some operations (still generating thumbs) could quickly reach any value and setting this value force the JVM to clear the memory when near to this value (Garbage collecting) [Change this setting only if you have very large collection, do not reduce it]
# * -XX:MinHeapFreeRatio -XX:MaxHeapFreeRatio : fine running parameters that optimizes JVM to garbage collecting as rarely as possible (because a gc 'end of the world' causes an audio blanck). These values have been set by experience [keep these parameters as it]
JAVA_OPTIONS="-Djava.library.path=/usr/lib/jajuk/ -client -Xms20M -Xmx512M -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10"

#Jajuk options
JAJUK_OPTIONS="-test"

#Do you want this script to try to find and use an alternate java version installed on your system that will be more suitable for Jajuk? Use "true" or "false".
FIND_OTHER_JAVA="true"

### CONFIGURATION END ###
#########################

JAJUK_VERSION="VERSION_REPLACED_BY_ANT"
PROGNAME=`basename $0`

## Version warning
warning_version () {
    echo "==================================================================="
    echo " Jajuk runs much faster with Java SUN 1.6, consider to install it. "
    echo "==================================================================="
    echo " "
}

## find java version in the default path
JAVA_VER=$($JAVA_BIN -version 2>&1 | grep version | cut -d\" -f 2-2 | cut -c 1-3)

find_java () {
    if [ "$JAVA_VER" = "1.6" ] ; then
        echo " Java 1.6 detected (in default path)"
    elif [ "$FIND_OTHER_JAVA" = "true" ] ; then
        echo " Java version in the default path may not be the best or compatible with Jajuk. Let's try other places in case a better version is present..."
        echo " To turn off this auto-detection funtion, edit $0 and set FIND_OTHER_JAVA to false"
        #Search for Java SUN 1.6
        if [ -e /usr/lib/j2re1.6-sun/bin/java ] ; then
            JAVA_BIN="/usr/lib/j2re1.5-sun/bin/java"
            echo "j2re1.6-sun detected in $JAVA_BIN"
        elif [ -e /usr/lib/jvm/java-6-sun/jre/bin/java ] ; then
            JAVA_BIN="/usr/lib/jvm/java-6-sun/jre/bin/java"
            echo " j2re1.6-sun detected in $JAVA_BIN"
        #Search for Java SUN 1.5
        elif [ "$JAVA_VER" = "1.5" ] ; then
            echo " Java 1.5 detected (in default path)"
            warning_version
        elif [ -e /usr/lib/jvm/java-1.5.0-sun/jre/bin/java ] ; then
            JAVA_BIN="/usr/lib/jvm/java-1.5.0-sun/jre/bin/java"
            echo " j2re1.5-sun detected in $JAVA_BIN"
            warning_version
        elif [ -e /usr/lib/j2re1.5-sun/bin/java ] ; then
            JAVA_BIN="/usr/lib/j2re1.5-sun/bin/java"
            echo " j2re1.5-sun detected in $JAVA_BIN"
            warning_version
        fi
    elif [ "$JAVA_VER" = "1.5" ] ; then
        echo " Java 1.5 detected (in default path)"
        warning_version
    else
        echo " No Java compatible version detected, but let's still try to run it!"
        warning_version
    fi
}    
 
if [ $# -gt 0 ]; then
    case $1 in
        -h|--help)
            cat <<EOF
Usage: $PROGNAME [options] [<arg> ...]
Options:
   -h, --help     This help
   -v, --version  Report Jajuk, Java version and exit
EOF
            exit 1
            ;;
        -v|--version)
            echo "$PROGNAME : $JAJUK_VERSION"
            echo "Default path Java version is: $JAVA_VER"
            echo "Jajuk will use Java: "
            find_java 
            exit 0
            ;;
    esac
fi

echo "$PROGNAME : $JAJUK_VERSION"

find_java 
 
   
##Go in the right directory
#test if jajuk has been installed in default directory /usr/lib/jajuk/ via RPM/Deb package
if [ -e /usr/share/jajuk/bin/jajuk.jar ] ; then
    cd /usr/share/jajuk/bin
else
    cd `dirname $0`/bin
fi


##let's finally start Jajuk:
echo " "
echo $JAVA_BIN $JAVA_OPTIONS -jar jajuk.jar $JAJUK_OPTIONS
$JAVA_BIN $JAVA_OPTIONS -jar jajuk.jar $JAJUK_OPTIONS
